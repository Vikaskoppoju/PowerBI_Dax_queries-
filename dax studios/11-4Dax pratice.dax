//1. List of active cabs

EVALUATE

FILTER(Cabs,Cabs[Active]="YES")

//2. Count Of active cabs by licence type

EVALUATE

SUMMARIZECOLUMNS(

'Cabs'[LicenseType],

"ActiveCount", CALCULATE(COUNTROWS('Cabs'),'Cabs'[Active]="YES")

)

//3. Cabs Accessible for wheelchair -- Data Inconsistancy

EVALUATE

FILTER('Cabs',NOT ISBLANK('Cabs'[WheelchairAccessible]))

// other case

EVALUATE

FILTER('Cabs','Cabs'[WheelchairAccessible]="Wav")

//4. Cabs by year of vehicle

EVALUATE

SUMMARIZE('Cabs',Cabs[VehicleYear],"CabsCount",COUNTROWS('Cabs'))

//5. Count of Websites Provided

EVALUATE

ROW("CabswithWebsite",COUNTROWS(FILTER('Cabs',NOT ISBLANK('Cabs'[Website]))))

//6. Vehicle Years - Min,Max, Avg

EVALUATE
SUMMARIZECOLUMNS(
	"MinYear",MIN('Cabs'[VehicleYear]),
	"MaxYear",MAX('Cabs'[VehicleYear]),
	"AVGYear",AVERAGE('Cabs'[VehicleYear]))
	

//7. Cab count Per Address

EVALUATE
SUMMARIZECOLUMNS('Cabs'[Address],"Count of Cabs",CALCULATE(COUNTROWS('Cabs')))

// or

EVALUATE
SUMMARIZE('Cabs','Cabs'[Address],"Cabcount",COUNTROWS('Cabs'))


//8.  

EVALUATE 
FILTER('Cabs', ISBLANK('Cabs'[VehicleType]))

//9. Top 5 address by Number of Cabs

EVALUATE
TOPN(
5,
SUMMARIZE('Cabs',Cabs[Address],"CabCount",COUNTROWS('Cabs')),
[Cabcount],desc
)

//10. ALLEXCEPT
//DUPLICATES IN VINS

EVALUATE
FILTER(
	ADDCOLUMNS(
	'Cabs',
	"Count",
	CALCULATE(COUNTROWS('Cabs'),ALLEXCEPT('Cabs','Cabs'[VehicleVinNumber])
	),
	[Count]>1
	
	)
	
	
	
// Multilevel Grouping & Filtering
 //11. Multiple Columns - Cabs by licence type and vehicleyear
 
 EVALUATE 
 SUMMARIZE(
 	Cabs,
 	Cabs[LicenseType],
 	Cabs[VehicleYear],
 	"Cabcount",COUNTROWS(Cabs))
 	
 	
// Advanced Grouping Filters and Metrics:
//12. Cabs with same phone numbers:

EVALUATE
FILTER(
	ADDCOLUMNS(
	'Cabs',
	"Count",
	CALCULATE(COUNTROWS(('Cabs'). ALLEXCEPT('Cabs','Cabs'[TelephoneNumber]))),
	[Count]>1)


//13. Vechcile Registered Between 2012 & 2016

EVALUATE 
FILTER('Cabs','Cabs'[VehicleYear] >= 2012 && 'Cabs'[VehicleYear] <= 2016)

//14. Vehicle  year by vehcile licence type average

EVALUATE
SUMMARIZECOLUMNS('Cabs'[LicenseType],
	"Avgyear",AVERAGE('Cabs'[VehicleYear]))
	
//15. Address Contains Zip Code 10463
// Search Function
EVALUATE
FILTER('Cabs',SEARCH("10463",'Cabs'[Address],1,0) > 0)

//16. Rank Cabs by Vehicle year (desc)
EVALUATE
ADDCOLUMNS(
	'Cabs',
	"yearRank", RANKX(All('Cabs'), 'Cabs'[VehicleYear], ,DESC)
	)
	
//17. identity can entries without a Cab number
EVALUATE
FILTER('Cabs', ISBLANK('Cabs'[CabNumber]))

//18. Count of Cabs where owner must drive
EVALUATE CALCULATETABLE(
FILTER(
	'Cabs',
	'Cabs'[LicenseType]="OWNER MUST DRIVE"),
	ALL('Cabs'))
	
//19. Group Duplicates VIN Numbers:
EVALUATE
FILTER(
ADDCOLUMNS(
	'Cabs',
	"VinCount",CALCULATE(COUNTROWS('Cabs'), ALLEXCEPT('Cabs','Cabs'[VehicleVinNumber]))),
	[VinCount]> 1)
	
	
//20. Grouping website domains & count

EVALUATE
SUMMARIZE(
ADDCOLUMNS(
	'Cabs',
	"Domain",
	IF(

		ISBLANK('Cabs'[Website]) || FIND(".", 'Cabs'[Website], 1, 0) =0,// || is piping method in search or find
		"N/A",
		RIGHT('Cabs'[Website], LEN('Cabs'[Website]) - FIND(".", 'Cabs'[Website], 1)))
	),
	[Domain],
	"Count", COUNTX('Cabs', [Domain]))
	
	
//21. Compare Active  vs Non- Active
EVALUATE
SUMMARIZE(
	'Cabs',
	'Cabs'[Active],
	"Total",COUNTROWS('Cabs'))
	
//22. Finding Duplicates Phone Numbers
EVALUATE
FILTER(
ADDCOLUMNS(
	'Cabs',
	"Phone Count",CALCULATE(COUNTROWS('Cabs'),ALLEXCEPT('Cabs','Cabs'[TelephoneNumber]))),
	[Phone Count]>1)
	
	
//23. Top5 VIN PREFIXES by Count	
EVALUATE
TOPN(
	5,
	SUMMARIZE(
	ADDCOLUMNS ('Cabs', "VINPrefix", LEFT('Cabs' [VehicleVinNumber], 3)),
	[VINPrefix],
	"Count", COUNTROWS ( 'Cabs' )
	),

	[Count],
	DESC

)


//24 . Vehicle by address Frequency
EVALUATE
SUMMARIZE(
	'Cabs',
	'Cabs'[Address],
	"CabCount",COUNTROWS('Cabs'))
	
//25. Count the Vehicle per year for owner must drive only
EVALUATE
SUMMARIZE(
FILTER(
	'Cabs','Cabs'[LicenseType]="OWNER MUST DRIVE"),
	'Cabs'[VehicleYear],
	"Count",COUNTROWS('Cabs')
	)
	
	
//26. Top 10 name by cabcount

EVALUATE
TOPN(
5,
SUMMARIZE(
	'Cabs',
	'Cabs'[Name],
	"Count",COUNTROWS('Cabs')),
	[Count], DESC
	)
	
// 27. All Cabs with year = Current Year
EVALUATE
FILTER(
'Cabs',
'Cabs'[VehicleYear]= YEAR(TODAY()))

//28. Count of patients by gender
EVALUATE
SUMMARIZECOLUMNS('health'[Gender],"Count",COUNTROWS('health'))

//29. Count of patients by blood type:
EVALUATE

SUMMARIZECOLUMNS(health[Blood Type],"PatientsCount",COUNTROWS('health'))

//30. Average billing by mediacl condition
EVALUATE
ADDCOLUMNS(VALUES(health[Medical Condition]),
"Avg_billing",AVERAGE(health[Billing Amount]))

// or
EVALUATE
SUMMARIZE(
	health,
	health[Medical Condition],
	"Avg_billing",AVERAGE(health[Billing Amount]))